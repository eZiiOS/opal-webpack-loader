#!/usr/bin/env ruby
require 'open3'
require 'oj'
require 'c_lexer'
require 'optparse'
require 'opal/paths'
require 'opal/source_map'
require 'opal/compiler'
require 'opal-webpack-loader/load_path_manager'
require 'opal-webpack-loader/compile_worker'
require 'opal-webpack-loader/compile_server'

at_exit do
  if OpalWebpackLoader::CompileServer.unlink_socket?
    if File.exist?(OpalWebpackLoader::CompileServer::OWCS_SOCKET_PATH)
      File.unlink(OpalWebpackLoader::CompileServer::OWCS_SOCKET_PATH)
    end
  end
end

modules_to_require = []

OptionParser.new do |opts|
  opts.on('-r', '--require MODULE', 'require the module before starting the compile server') do |m|
    modules_to_require << m
  end

  opts.on('-I', '--include DIR', 'Append a load path (may be used more than once)') do |i|
    $:.unshift(File.expand_path(i))
  end
end.parse!

modules_to_require.each do |mod|
  require mod
end

if ARGV[0] == 'stop' || ARGV[0] == 'kill'
  OpalWebpackLoader::CompileServer.stop
else
  if ARGV[0] == 'start'
    OpalWebpackLoader::CompileServer.stop(false)
    number_of_workers = ARGV[1].to_i
    number_of_workers == 4 if number_of_workers == 0
    number_of_workers == 16 if number_of_workers > 16
    if ARGV[2] && ARGV[2].start_with?('webpack')
      raise <<~MSG
      Please change the scripts in package.json to only start webpack:\n
      eg. from: "debug": "bundle exec opal-webpack-compile-server start 8 webpack --config=config/webpack/test.js"
      to just:  "debug": "webpack --config=config/webpack/test.js"
      MSG
    end
  else
    raise 'arguments must be either "stop" or "start number_of_workers"'
    exit(1)
  end

  load_paths = OpalWebpackLoader::LoadPathManager.read_load_paths_cache
  if load_paths
    Opal.append_paths(*load_paths)
  end

  pid = fork { OpalWebpackLoader::CompileServer.new.start(number_of_workers) }

  have_socket = false
  start_time = Time.now
  begin
    until have_socket
      if File.exist?(OpalWebpackLoader::CompileServer::OWCS_SOCKET_PATH)
        have_socket = true
      else
        if Time.now - start_time > 60
          STDERR.puts "opal-webpack-compile-server didnt start in time. Exiting"
          OpalWebpackLoader::CompileServer.stop(false)
          Process.kill("TERM", pid)
          exit 1
        end
      end
    end
  rescue Exception => e
    OpalWebpackLoader::CompileServer.stop(false)
    STDERR.puts "opal-webpack-compile-server couldn't start:"
    STDERR.puts e.backtrace.join("\n")
    STDERR.puts e.message
    Process.kill("TERM", pid)
    exit 1
  end

  begin
    Process.waitpid(pid)
  rescue Interrupt
    STDERR.puts "opal-webpack-compile-server got interrupted. Exiting with drama."
    Process.kill("TERM", pid)
    exit 0
  end
  Process.kill("TERM", pid)
end